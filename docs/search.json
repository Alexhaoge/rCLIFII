[{"path":"https://github.com/Xuxl2020/rCLIFII/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Xueli Xu. Maintainer.","code":""},{"path":"https://github.com/Xuxl2020/rCLIFII/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Xu X, Lyu Z, Xu X (2022). rCLIFII: Composite Likelihood Inference Individual Identifications. R package version 0.1.0, https://github.com/Xuxl2020/rCLIFII/.","code":"@Manual{,   title = {rCLIFII: Composite Likelihood Inference for Individual Identifications},   author = {Xueli Xu and Zhihao Lyu and Ximing Xu},   year = {2022},   note = {R package version 0.1.0},   url = {https://github.com/Xuxl2020/rCLIFII/}, }"},{"path":"https://github.com/Xuxl2020/rCLIFII/index.html","id":"rclifii","dir":"","previous_headings":"","what":"Composite Likelihood Inference for Individual Identifications ","title":"Composite Likelihood Inference for Individual Identifications ","text":"Composite likelihood ecology, especially animal individual identification. Algorithms include maximum composite likelihood estimation(MCLE), model selection well generating simulated data.","code":""},{"path":[]},{"path":"https://github.com/Xuxl2020/rCLIFII/index.html","id":"install-by-devtools","dir":"","previous_headings":"Install","what":"Install by devtools","title":"Composite Likelihood Inference for Individual Identifications ","text":"install Github download source file install locally","code":"devtools::install_github('Xuxl2020/rCLIFII') devtools::install_github('path/to/rCLIFII.tar.gz')"},{"path":"https://github.com/Xuxl2020/rCLIFII/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 rCLIFII authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://github.com/Xuxl2020/rCLIFII/reference/functions.html","id":null,"dir":"Reference","previous_headings":"","what":"Preparation functions — functions","title":"Preparation functions — functions","text":"Preparation functions","code":""},{"path":"https://github.com/Xuxl2020/rCLIFII/reference/functions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preparation functions — functions","text":"","code":".data.clean(n, tp)  list_to_matrix(X, tp, group_id = NULL)  data.frame_to_matrix(X)  lir_estimation_c(R_m, R_n, mij, nij, tauij, mtau = 1000)  lar_estimation_c(g_m, g_n, Aij, Ai, tauij, mtau = 1000)  g_np(mij, np, tauij)"},{"path":"https://github.com/Xuxl2020/rCLIFII/reference/functions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preparation functions — functions","text":"n number sampling individuals (LIR) groups (LAR). tp set observed time. X Simulation data. group_id Groups individuals. R_m Sum mij. R_n Sum nij. mij number individuals identified time t_i t_j. nij number individuals identified time t_i. tauij Time lag time t_i t_j. mtau maximum allowable lag time. g_m Sum Aij. g_n Sum Ai. Aij number observed associated individuals (pairs) observed time t_i t_j. Ai number observed associated individuals (pairs) time t_i. np Expectation value mij (LIR) Aij (LAR).","code":""},{"path":"https://github.com/Xuxl2020/rCLIFII/reference/lar_bootstrap.html","id":null,"dir":"Reference","previous_headings":"","what":"Nonparametric block bootstrap sampling for animal social structure data — lar_bootstrap","title":"Nonparametric block bootstrap sampling for animal social structure data — lar_bootstrap","text":"Observation time divided non-overlapping blocks; obtain one bootstrap subsample block sampling periods replacement; complete bootstrap sample obtained merging bootstrap subsamples according order original time series.","code":""},{"path":"https://github.com/Xuxl2020/rCLIFII/reference/lar_bootstrap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Nonparametric block bootstrap sampling for animal social structure data — lar_bootstrap","text":"","code":"lar_bootstrap(X, block_list, group_id = NULL, seed = NULL)"},{"path":"https://github.com/Xuxl2020/rCLIFII/reference/lar_bootstrap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Nonparametric block bootstrap sampling for animal social structure data — lar_bootstrap","text":"X list matrix containing identities individuals groups affiliated per sampling period block_list block list series observation time group_id Groups individuals belong; X list, please input group_id; X matrix, parameter can skipped takes default NULL value seed Random seed; default NULL","code":""},{"path":"https://github.com/Xuxl2020/rCLIFII/reference/lar_bootstrap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Nonparametric block bootstrap sampling for animal social structure data — lar_bootstrap","text":"bootstrap samples animal social structure data.","code":""},{"path":"https://github.com/Xuxl2020/rCLIFII/reference/lar_bootstrap.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Nonparametric block bootstrap sampling for animal social structure data — lar_bootstrap","text":"details function, please see block bootstrap sampling time series analysis.","code":""},{"path":"https://github.com/Xuxl2020/rCLIFII/reference/lar_bootstrap.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Nonparametric block bootstrap sampling for animal social structure data — lar_bootstrap","text":"Politis, D. N. (2003). impact bootstrap methods time series analysis. Statistical science, 18, 219-230.","code":""},{"path":"https://github.com/Xuxl2020/rCLIFII/reference/lar_bootstrap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Nonparametric block bootstrap sampling for animal social structure data — lar_bootstrap","text":"","code":"# Example # load data data(simulation_D) #> Warning: data set 'simulation_D' not found block_list <- simulation_D@block_list #> Error in eval(expr, envir, enclos): object 'simulation_D' not found group_id <- simulation_D@group_id #> Error in eval(expr, envir, enclos): object 'simulation_D' not found # if X is a list list_simulation_D <- simulation_D@list_simulation_D #> Error in eval(expr, envir, enclos): object 'simulation_D' not found bootstrap_sample <- lar_bootstrap(list_simulation_D, block_list, group_id) #> Error in unlist(block_list): object 'block_list' not found # if X is a matrix matrix_simulation_D <- simulation_D@matrix_simulation_D #> Error in eval(expr, envir, enclos): object 'simulation_D' not found bootstrap_sample <- lar_bootstrap(matrix_simulation_D, block_list) #> Error in unlist(block_list): object 'block_list' not found"},{"path":"https://github.com/Xuxl2020/rCLIFII/reference/lar_model_selection.html","id":null,"dir":"Reference","previous_headings":"","what":"Model selection for models of lagged association rate — lar_model_selection","title":"Model selection for models of lagged association rate — lar_model_selection","text":"Model selection models lagged association rate","code":""},{"path":"https://github.com/Xuxl2020/rCLIFII/reference/lar_model_selection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Model selection for models of lagged association rate — lar_model_selection","text":"","code":"lar_model_selection(   X,   model,   block_list,   nboot,   group_id = NULL,   mtau = 1000,   ncores = 4,   seed = NULL )"},{"path":"https://github.com/Xuxl2020/rCLIFII/reference/lar_model_selection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Model selection for models of lagged association rate — lar_model_selection","text":"X list matrix containing identities individuals within study area, states status individuals sampling period. model Models lagged identification rate, model = 'lar_1', 'lar_2', 'lar_3'. block_list block list series observation time. example, block_list = list(c(1:5), c(51:55), c(101:105), c(501:505), c(601:605)). nboot number bootstrap samples desired group_id Groups individuals. X list, please input group_id. X matrix, parameter can skipped takes default NULL value. mtau maximum allowable lag time ncores doParallel seed Random seed","code":""},{"path":"https://github.com/Xuxl2020/rCLIFII/reference/lar_model_selection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Model selection for models of lagged association rate — lar_model_selection","text":"values model selection criteria.","code":""},{"path":"https://github.com/Xuxl2020/rCLIFII/reference/lar_model_selection.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Model selection for models of lagged association rate — lar_model_selection","text":"See Akaike (1973) Akaike information criterion (AIC); See Burnhan Anderson (2002) Quasi-Akaike information criterion (QAIC); See paper composite likelihood information criterion (CLIC).","code":""},{"path":"https://github.com/Xuxl2020/rCLIFII/reference/lar_nonparametric_estimation.html","id":null,"dir":"Reference","previous_headings":"","what":"A nonparametric estimator for lagged association rate — lar_nonparametric_estimation","title":"A nonparametric estimator for lagged association rate — lar_nonparametric_estimation","text":"nonparametric estimator lagged association rate","code":""},{"path":"https://github.com/Xuxl2020/rCLIFII/reference/lar_nonparametric_estimation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A nonparametric estimator for lagged association rate — lar_nonparametric_estimation","text":"","code":"lar_nonparametric_estimation(X, tp, group_id = NULL)"},{"path":"https://github.com/Xuxl2020/rCLIFII/reference/lar_nonparametric_estimation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A nonparametric estimator for lagged association rate — lar_nonparametric_estimation","text":"X list matrix containing identities individuals within study area, states status individuals sampling period. tp set observation time. group_id Groups individuals. X list, please input group_id. X matrix, parameter can skipped takes default NULL value.","code":""},{"path":"https://github.com/Xuxl2020/rCLIFII/reference/lar_nonparametric_estimation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A nonparametric estimator for lagged association rate — lar_nonparametric_estimation","text":"list following elements: tau set time lags gtau nonparametric estimator \\(\\hat{g}(\\tau)\\) given Whitehead (2007) g_m \\(\\sum_{,j} \\{A_{t_i,t_j}|\\tau_{ij}=\\tau\\}\\), \\(\\tau_{ij}=|t_i-t_j|\\) g_n \\(\\sum_{,j} \\{A_i|\\tau_{ij}=\\tau\\}\\), \\(\\tau_{ij}=|t_i-t_j|\\) Aij number associations pair individuals time \\(t_i\\) \\(t_j\\) Ai number associations pair individuals time \\(t_i\\) tauij \\(\\tau_{ij}=|t_i-t_j|\\)","code":""},{"path":"https://github.com/Xuxl2020/rCLIFII/reference/lar_nonparametric_estimation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A nonparametric estimator for lagged association rate — lar_nonparametric_estimation","text":"lagged association rate \\(g(\\tau)\\) probability two individuals associated now, still associated time lag  \\(\\tau\\). nonparametric estimator \\(g(\\tau)\\) given Whitehead (2007): $$\\hat{g}(\\tau)=\\frac{\\sum_{,j} \\{A_{t_i,t_j}|\\tau_{ij}=\\tau\\}}{\\sum_{,j}\\{A_i|\\tau_{ij}=\\tau\\}},$$ \\(A_{t_i,t_j}\\) number associations pair individuals time \\(t_i\\) \\(t_j\\), \\(A_{t_i}\\) represents number associations pair individuals time \\(t_i\\).","code":""},{"path":"https://github.com/Xuxl2020/rCLIFII/reference/lar_simulations.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate three types of animal social structure patterns. — lar_simulation_D/E/F","title":"Simulate three types of animal social structure patterns. — lar_simulation_D/E/F","text":"Simulate three types animal social structure patterns.","code":""},{"path":"https://github.com/Xuxl2020/rCLIFII/reference/lar_simulations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate three types of animal social structure patterns. — lar_simulation_D/E/F","text":"","code":"lar_simulation_D(N, n, W, tp)  lar_simulation_E(N, n, W, lambda, tp)  lar_simulation_F(N, n, W, U, lambda, tp)"},{"path":"https://github.com/Xuxl2020/rCLIFII/reference/lar_simulations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate three types of animal social structure patterns. — lar_simulation_D/E/F","text":"N Population size within study area. n vector positive integer, representing number groups identified sampling period. indicates number groups identified sampling periods positive integer. W Number groups formed individuals. tp set observed time. lambda probability individual changes group per time unit. U Number permanent social units allocated individuals.","code":""},{"path":"https://github.com/Xuxl2020/rCLIFII/reference/lar_simulations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate three types of animal social structure patterns. — lar_simulation_D/E/F","text":"Simulation data Type D-F.","code":""},{"path":"https://github.com/Xuxl2020/rCLIFII/reference/lar_simulations.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulate three types of animal social structure patterns. — lar_simulation_D/E/F","text":"Type D (Random): individuals form W groups, random allocation individuals groups observation. Type E (Casual acquaintances): individuals form W groups, change groups probability lambda per time unit. Type F (Permanent companions plus casual acquaintances): individuals randomly allocated U permanent social units, randomly allocated W groups, units changing groups probability lambda per time unit-permanent companions plus casual acquaintances.","code":""},{"path":"https://github.com/Xuxl2020/rCLIFII/reference/lar_simulations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate three types of animal social structure patterns. — lar_simulation_D/E/F","text":"","code":"# Example # set population size and number of subsampling N <- 100; n <- 4; W <- 10; U <- 20 # set the observation time tp <- c(1:5, 51:55, 101:105, 501:505, 601:605) # set parameters lambda_E <- 0.008; lambda_F <- 0.008  # simulation of Type D simulation_D <- lar_simulation_D(N, n, W, tp) lar_data <- lar_nonparametric_estimation(simulation_D, tp) Aij <- lar_data$Aij Ai <- lar_data$Ai tauij <- lar_data$tauij theta <- round(.mod4(Aij, Ai, tauij)$par, 8)  # a plot object graph_data <- data.frame(tau=lar_data$tau, g_tau=lar_data$g_tau) require(ggplot2) #> Loading required package: ggplot2 ggplot(data = graph_data, aes(tau, g_tau)) + geom_point() +   theme(axis.text = element_text(size = rel(1.2))) +   labs(x=\"Time Lag\", y=\"Lagged Association Rates\", title='Simulation_D') +   geom_hline(yintercept = theta, linetype = 2, color='blue')   # simulation of Type E simulation_E <- lar_simulation_E(N, n, W, lambda_E, tp) lar_data <- lar_nonparametric_estimation(simulation_E, tp) Aij <- lar_data$Aij Ai <- lar_data$Ai tauij <- lar_data$tauij theta <- round(.mod5(Aij, Ai, tauij)$par, 8) alpha <- theta[1] beta <- theta[2] graph_data <- data.frame(tau=lar_data$tau, g_tau=lar_data$g_tau) tT <- max(tp-min(tp)) line_data <- data.frame(tau=seq_len(tT), g_tau=(1-alpha)*exp(-beta*seq_len(tT))+alpha) require(ggplot2) ggplot(data = graph_data, aes(tau, g_tau)) +   geom_point() +   theme(axis.text = element_text(size = rel(1.2))) +   labs(x=\"Time Lag\", y=\"Lagged Association Rates\", title='Simulation_E') +   geom_line(aes(tau, g_tau), line_data, linetype = 2, color='blue')   # simulation of Type F simulation_F <- lar_simulation_F(N=100, n=4, W=10, U=20, lambda_F, tp) lar_data <- lar_nonparametric_estimation(simulation_F, tp) Aij <- lar_data$Aij Ai <- lar_data$Ai tauij <- lar_data$tauij theta <- round(.mod5(Aij, Ai, tauij)$par, 8) alpha <- theta[1] beta <- theta[2] graph_data <- data.frame(tau=lar_data$tau, g_tau=lar_data$g_tau) tT <- max(tp-min(tp)) line_data <- data.frame(tau=seq_len(tT), g_tau=(1-alpha)*exp(-beta*seq_len(tT))+alpha) ggplot(data = graph_data, aes(tau, g_tau)) +   geom_point() +   theme(axis.text = element_text(size = rel(1.2))) +   labs(x=\"Time Lag\", y=\"Lagged Association Rates\", title='Simulation_F') +   geom_line(aes(tau, g_tau), line_data, linetype = 2, color='blue')"},{"path":"https://github.com/Xuxl2020/rCLIFII/reference/lir_bootstrap.html","id":null,"dir":"Reference","previous_headings":"","what":"Nonparametric bootstrap sampling for animal movement data — lir_bootstrap","title":"Nonparametric bootstrap sampling for animal movement data — lir_bootstrap","text":"Generate bootstrap samples original observations sampling individuals replacement.","code":""},{"path":"https://github.com/Xuxl2020/rCLIFII/reference/lir_bootstrap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Nonparametric bootstrap sampling for animal movement data — lir_bootstrap","text":"","code":"lir_bootstrap(X, tp, seed = NULL)"},{"path":"https://github.com/Xuxl2020/rCLIFII/reference/lir_bootstrap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Nonparametric bootstrap sampling for animal movement data — lir_bootstrap","text":"X list matrix containing identities individuals identified per sampling period tp set observation time seed Random seed; default NULL","code":""},{"path":"https://github.com/Xuxl2020/rCLIFII/reference/lir_bootstrap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Nonparametric bootstrap sampling for animal movement data — lir_bootstrap","text":"bootstrap samples animal movement data.","code":""},{"path":"https://github.com/Xuxl2020/rCLIFII/reference/lir_bootstrap.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Nonparametric bootstrap sampling for animal movement data — lir_bootstrap","text":"details function, please see Efron Tibshirani (1993).","code":""},{"path":"https://github.com/Xuxl2020/rCLIFII/reference/lir_bootstrap.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Nonparametric bootstrap sampling for animal movement data — lir_bootstrap","text":"Efron, B., & Tibshirani, R. J. (1986). Bootstrap methods standard errors, confidence intervals, measures statistical accuracy. Statistical science, 1(1), 54-75. Efron, B., & Tibshirani, R. J. (1993). introduction bootstrap. Chapman Hall Press.","code":""},{"path":"https://github.com/Xuxl2020/rCLIFII/reference/lir_bootstrap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Nonparametric bootstrap sampling for animal movement data — lir_bootstrap","text":"","code":"# Example # load data data(simulation_A) #> Warning: data set 'simulation_A' not found tp <- simulation_A@tp #> Error in eval(expr, envir, enclos): object 'simulation_A' not found # if X is a list list_simulation_A <- simulation_A@list_simulation_A #> Error in eval(expr, envir, enclos): object 'simulation_A' not found bootstrap_sample <- lir_bootstrap(list_simulation_A, tp) #> Error in lir_bootstrap(list_simulation_A, tp): object 'list_simulation_A' not found # if X is a matrix matrix_simulation_A <- simulation_A@matrix_simulation_A #> Error in eval(expr, envir, enclos): object 'simulation_A' not found bootstrap_sample <- lir_bootstrap(matrix_simulation_A, tp) #> Error in lir_bootstrap(matrix_simulation_A, tp): object 'matrix_simulation_A' not found"},{"path":"https://github.com/Xuxl2020/rCLIFII/reference/lir_model_selection.html","id":null,"dir":"Reference","previous_headings":"","what":"Model selection for models of lagged identification rate — lir_model_selection","title":"Model selection for models of lagged identification rate — lir_model_selection","text":"Model selection models lagged identification rate","code":""},{"path":"https://github.com/Xuxl2020/rCLIFII/reference/lir_model_selection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Model selection for models of lagged identification rate — lir_model_selection","text":"","code":"lir_model_selection(   X,   n,   tp,   model,   nboot,   mtau = 1000,   ncores = 4,   seed = NULL )"},{"path":"https://github.com/Xuxl2020/rCLIFII/reference/lir_model_selection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Model selection for models of lagged identification rate — lir_model_selection","text":"X list matrix containing identities individuals identified sampling period n vector positive integer, representing number individuals identified sampling period. indicates number individuals identified sampling periods positive integer. tp set observed time. model Models lagged identification rate, model = 'lir_1', 'lir_2', 'lir_3'. nboot number bootstrap samples desired mtau maximum allowable lag time. ncores doParallel. seed Random seed.","code":""},{"path":"https://github.com/Xuxl2020/rCLIFII/reference/lir_model_selection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Model selection for models of lagged identification rate — lir_model_selection","text":"values model selection criteria.","code":""},{"path":"https://github.com/Xuxl2020/rCLIFII/reference/lir_model_selection.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Model selection for models of lagged identification rate — lir_model_selection","text":"See Akaike (1973) Akaike information criterion (AIC); See Burnhan Anderson (2002) Quasi-Akaike information criterion (QAIC); See paper composite likelihood information criterion (CLIC).","code":""},{"path":"https://github.com/Xuxl2020/rCLIFII/reference/lir_nonparametric_estimation.html","id":null,"dir":"Reference","previous_headings":"","what":"A nonparametric estimator for lagged identification rate — lir_nonparametric_estimation","title":"A nonparametric estimator for lagged identification rate — lir_nonparametric_estimation","text":"nonparametric estimator lagged identification rate","code":""},{"path":"https://github.com/Xuxl2020/rCLIFII/reference/lir_nonparametric_estimation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A nonparametric estimator for lagged identification rate — lir_nonparametric_estimation","text":"","code":"lir_nonparametric_estimation(X, n, tp)"},{"path":"https://github.com/Xuxl2020/rCLIFII/reference/lir_nonparametric_estimation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A nonparametric estimator for lagged identification rate — lir_nonparametric_estimation","text":"X list matrix containing identities individuals identified sampling period n vector positive integer, representing number individuals identified sampling period. indicates number individuals identified sampling periods positive integer. tp set observation time","code":""},{"path":"https://github.com/Xuxl2020/rCLIFII/reference/lir_nonparametric_estimation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A nonparametric estimator for lagged identification rate — lir_nonparametric_estimation","text":"list following elements: tau set time lags R_tau nonparametric estimator \\(\\hat{R}(\\tau)\\) given Whitehead (2007) R_m \\(\\sum_{,j} \\{m_{t_i,t_j}|\\tau_{ij}=\\tau\\}\\), \\(\\tau_{ij}=|t_i-t_j|\\) R_n \\(\\sum_{,j} \\{n_i*n_j|\\tau_{ij}=\\tau\\}\\), \\(\\tau_{ij}=|t_i-t_j|\\) mij number individuals identified time \\(t_i\\) \\(t_j\\) nij \\(n_i\\)*\\(n_j\\) tauij \\(\\tau_{ij}=|t_i-t_j|\\)","code":""},{"path":"https://github.com/Xuxl2020/rCLIFII/reference/lir_nonparametric_estimation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A nonparametric estimator for lagged identification rate — lir_nonparametric_estimation","text":"lagged identification rate \\(R(\\tau)\\) probability individual study area identified now reidentified time lag \\(\\tau\\). nonparametric estimator \\(R(\\tau)\\) given Whitehead (2007): $$\\hat{R}(\\tau)=\\frac{\\sum_{,j} \\{m_{t_i,t_j}|\\tau_{ij}=\\tau\\}}{\\sum_{,j}\\{n_i*n_j|\\tau_{ij}=\\tau\\}},$$ \\(m_{t_i,t_j}\\) number individuals identified time \\(t_i\\) \\(t_j\\), \\(n_{t_i}\\) represents number individuals identified time \\(t_i\\).","code":""},{"path":"https://github.com/Xuxl2020/rCLIFII/reference/lir_nonparametric_estimation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A nonparametric estimator for lagged identification rate — lir_nonparametric_estimation","text":"","code":"# Example tp <- c(1:5, 51:55, 101:105, 501:505, 601:605) N <- 100; n <- 10 X <- list() for (i in tp){ X[[i]] <- sample(1:N, n) }  res <- lir_nonparametric_estimation(X, n, tp) res$R_tau; res$tau #>  [1] 0.007000000 0.008000000 0.010000000 0.008000000 0.012000000 0.011250000 #>  [7] 0.010000000 0.005000000 0.015000000 0.019000000 0.012500000 0.008333333 #> [13] 0.012500000 0.005000000 0.011000000 0.012500000 0.013333333 0.007500000 #> [19] 0.015000000 0.016000000 0.012500000 0.010000000 0.015000000 0.010000000 #> [25] 0.011250000 0.005000000 0.007500000 0.010000000 0.008333333 0.005000000 #> [31] 0.013333333 0.010000000 0.010000000 0.010000000 0.007500000 0.010000000 #> [37] 0.010000000 0.005000000 0.010000000 0.000000000 0.012000000 0.010000000 #> [43] 0.013333333 0.005000000 0.010000000 0.016000000 0.002500000 0.010000000 #> [49] 0.010000000 0.000000000 0.012500000 0.015000000 0.016666667 0.016666667 #> [55] 0.005000000 0.010000000 0.000000000 0.000000000 0.010000000 0.012500000 #> [61] 0.016666667 0.025000000 0.020000000 0.012500000 0.016666667 0.005000000 #> [67] 0.010000000 #>  [1]   1   2   3   4  50  51  52  53  54 100 101 102 103 104 500 501 502 503 504 #> [20] 600 601 602 603 604  49  99 499 599  48  98 498 598  47  97 497 597  46  96 #> [39] 496 596 450 451 452 453 454 550 551 552 553 554 449 549 448 548 447 547 446 #> [58] 546 400 401 402 403 404 399 398 397 396"},{"path":"https://github.com/Xuxl2020/rCLIFII/reference/lir_simulations.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate three types of animal movement patterns — lir_simulation_A/B/C","title":"Simulate three types of animal movement patterns — lir_simulation_A/B/C","text":"Simulate three types animal movement patterns","code":""},{"path":"https://github.com/Xuxl2020/rCLIFII/reference/lir_simulations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate three types of animal movement patterns — lir_simulation_A/B/C","text":"","code":"lir_simulation_A(N, n, tp)  lir_simulation_B(N, n, lambda, tp)  lir_simulation_C(Z, N, n, lambda, mu, tp)"},{"path":"https://github.com/Xuxl2020/rCLIFII/reference/lir_simulations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate three types of animal movement patterns — lir_simulation_A/B/C","text":"N positive integer, representing population size within study area. n vector positive integer, representing number individuals identified sampling period. indicates number individuals identified sampling periods positive integer. tp set observed time. lambda rate emigration study area. Z positive integer, representing population size within closed area, members can either inside outside study area. mu rate reimmigration study area.","code":""},{"path":"https://github.com/Xuxl2020/rCLIFII/reference/lir_simulations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate three types of animal movement patterns — lir_simulation_A/B/C","text":"Simulation data Type -C.","code":""},{"path":"https://github.com/Xuxl2020/rCLIFII/reference/lir_simulations.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulate three types of animal movement patterns — lir_simulation_A/B/C","text":"Type (Closed): population N individuals present study area throughout, immigration, emigration, birth, death. Type B (Permanent emigration): population N individuals study area permanent emigration rate lambda per individual per time unit, departed individuals replaced 1:1 new individuals. Type C (Emigration plus reimmigration): closed population Z individuals, members can either inside outside study area. Individuals study area leave study area rate lambda per individual per time unit individuals outside study area reenter probability mu per individual per time unit.","code":""},{"path":"https://github.com/Xuxl2020/rCLIFII/reference/lir_simulations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate three types of animal movement patterns — lir_simulation_A/B/C","text":"","code":"# Example # set population size and number of subsampling Z <- 300; N <- 100; n <- 40 # set the observation time tp <- c(1:5, 51:55, 101:105, 501:505, 601:605) # set parameters lambda_B <- 0.008; lambda_C <- 0.08; mu_C <- 0.04  # simulation of Type A simulation_A <- lir_simulation_A(N, n, tp) lir_data <- lir_nonparametric_estimation(simulation_A, n, tp) mij <- lir_data$mij nij <- lir_data$nij tauij <- lir_data$tauij theta <- round(.mod1(mij, nij, tauij)$par, 8) # a plot object graph_data <- data.frame(tau = lir_data$tau, R_tau = lir_data$R_tau) require(ggplot2) ggplot(data = graph_data, aes(tau, R_tau)) + geom_point() +   scale_y_continuous(limits = c(0, 0.02)) +   theme(axis.text = element_text(size = rel(1.2))) +   labs(x = 'Time Lag', y = 'Lagged Identification Rates', title = 'Simulation_A') +   geom_hline(yintercept = theta, linetype = 2, color = 'blue')   # simulation of Type B simulation_B <- lir_simulation_B(N, n, lambda_B, tp) lir_data <- lir_nonparametric_estimation(simulation_B, n, tp) mij <- lir_data$mij nij <- lir_data$nij tauij <- lir_data$tauij theta <- round(.mod2(mij, nij, tauij)$par, 8) alpha <- theta[1]; beta <- theta[2] graph_data <- data.frame(tau = lir_data$tau, R_tau = lir_data$R_tau) tT <- max(tp-min(tp)) line_data <- data.frame(tau = seq_len(tT), R_tau = alpha*exp(-beta*seq_len(tT))) require(ggplot2) ggplot(data = graph_data, aes(tau, R_tau)) +   geom_point() +   theme(axis.text = element_text(size = rel(1.2))) +   labs(x = 'Time Lag', y = 'Lagged Identification Rates', title = 'Simulation_B') +   geom_line(aes(tau, R_tau), line_data, linetype = 2, color='blue')   # simulation of Type C simulation_C <- lir_simulation_C(Z, N, n, lambda_C, mu_C, tp) lir_data <- lir_nonparametric_estimation(simulation_C, n, tp) mij <- lir_data$mij nij <- lir_data$nij tauij <- lir_data$tauij theta <- round(.mod3(mij, nij, tauij)$par, 8) alpha <- theta[3]; beta <- theta[2]; gamma <- theta[1] graph_data <- data.frame(tau = lir_data$tau, R_tau = lir_data$R_tau) tT <- max(tp-min(tp)) line_data <- data.frame(tau = seq_len(tT), R_tau = gamma*exp(-beta*seq_len(tT))+alpha) require(ggplot2) ggplot(data = graph_data, aes(tau, R_tau)) +   geom_point() +   theme(axis.text = element_text(size = rel(1.2))) +   labs(x = 'Time Lag', y = 'Lagged Identification Rates', title = 'Simulation_C') +   geom_line(aes(tau, R_tau), line_data, linetype = 2, color='blue')"},{"path":"https://github.com/Xuxl2020/rCLIFII/reference/models_internal.html","id":null,"dir":"Reference","previous_headings":"","what":"Build the models — models_internal","title":"Build the models — models_internal","text":"Build models","code":""},{"path":"https://github.com/Xuxl2020/rCLIFII/reference/models_internal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build the models — models_internal","text":"","code":".mod1(mij, nij, tauij, mtau = 1000)  .mod2(mij, nij, tauij, mtau = 1000)  .mod3(mij, nij, tauij, mtau = 1000)  .mod4(Aij, Ai, tauij, mtau = 1000)  .mod5(Aij, Ai, tauij, mtau = 1000)  .mod6(Aij, Ai, tauij, mtau = 1000)  lir.model.res(model, mij, nij, tauij, mtau)  lar.model.res(model, Aij, Ai, tauij, mtau)"},{"path":"https://github.com/Xuxl2020/rCLIFII/reference/models_internal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build the models — models_internal","text":"mij number individuals identified time t_i t_j. nij number individuals identified time t_i. tauij Time lag time t_i t_j. mtau maximum allowable lag time. Aij number observed associated individuals (pairs) observed time t_i t_j. Ai number observed associated individuals (pairs) time t_i. model Models LIR LAR.","code":""},{"path":"https://github.com/Xuxl2020/rCLIFII/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://github.com/Xuxl2020/rCLIFII/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://github.com/Xuxl2020/rCLIFII/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://github.com/Xuxl2020/rCLIFII/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://github.com/Xuxl2020/rCLIFII/reference/simulation_A.html","id":null,"dir":"Reference","previous_headings":"","what":"Type A: Closed — simulation_A","title":"Type A: Closed — simulation_A","text":"Type : Closed","code":""},{"path":"https://github.com/Xuxl2020/rCLIFII/reference/simulation_A.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Type A: Closed — simulation_A","text":"","code":"simulation_A"},{"path":"https://github.com/Xuxl2020/rCLIFII/reference/simulation_A.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Type A: Closed — simulation_A","text":"contain population size study area, number individuals randomly selected per sampling period, observation time, list form simulation , matrix form simulation ","code":""},{"path":"https://github.com/Xuxl2020/rCLIFII/reference/simulation_D.html","id":null,"dir":"Reference","previous_headings":"","what":"Type D: Random — simulation_D","title":"Type D: Random — simulation_D","text":"Type D: Random","code":""},{"path":"https://github.com/Xuxl2020/rCLIFII/reference/simulation_D.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Type D: Random — simulation_D","text":"","code":"simulation_D"},{"path":"https://github.com/Xuxl2020/rCLIFII/reference/simulation_D.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Type D: Random — simulation_D","text":"contain population size study area, number groups formed individuals, number groups randomly selected per sampling period, list form observation time, list form simulation D, matrix form simulation D","code":""}]
